from database import data 
from database import choice
import time
import os
class hangman(data):
    highscore=0  
    def rules(): 

        """ Function to clear screen and display rules """
        
        os.system('clear')
        print("""                
                                       ***  WELCOME TO HANGMAN  ***                  \n
                                      A Thrilling Word Guessing Game                     \n\n""")
        print('Loading rules...')
        time.sleep(1)                                
        print( """ 
                RULES :\n\n
                How To Play:\n
                A word will be generated by the system;you are required to guess the word by entering 
                one letter at a time. 
                Each correct guess will increase your score by 10 points, while each incorrect guess
                will add an element to the HANGMAN GALLOWS...  
                \n\n\n\n
                +
                +
                + * * * * * * * * * 
                +       |
                +       |
                +       O                                          
                +    ---|---
                +       +
                +      + +
                +     +   +
                +    
                +
                + + + + + + + + + + + + + +  
                \n\n\n\n
            This is the HANGMAN GALLOWS\n 
            For every incorrect guess, an element will be added to the gallows.
            If it fills up, you lose the game. 
            Bonus points will be awarded if the number of incorrect guesses is less than 4. 
            \n\n
            Hints:\n
            You can avail a maximum of 5 hints for one word.
            The first 2 hints are free, thereafter there is a PENALTY of 3 points per hint.
            Bonus points will be awarded if number of hints used is less than 3                      
            \n\n
            Winning the game: \n
            Guess the complete word before the Hangman fills up.
            On completing a word, your score increases by 100.
            There is no limit on the total number of guesses but too many hints and incorrect guesses
            will decrease your score.  
            \nPress ENTER to continue
             """)
        inp=input()
                 
                   
        
    

    def input1():

        """ Function to first input difficulty mode, then call function in data 
            to generate a random word """
        
        while True:
            os.system('clear')
            inp=input(""" \n\nPlease choose difficulty level\n
                            EASY       -enter 'E'
                            MEDIUM     -enter 'M'
                            HARD       -enter 'H' 
                            NIGHTMARE  -enter 'N'  
                            RANDOM     -enter 'R'
                           \n Enter difficulty mode : """)
            inp=inp.strip().upper()        
            if inp not in 'EMHNR' :
                print('\nI DIDN\'T GET THAT. PLEASE ENTER CORRECT LETTER\n')
                time.sleep(1)
                os.system('clear')
                continue
            elif len(inp)!=1:
                print('\nI DIDN\'T GET THAT. PLEASE ENTER CORRECT LETTER\n')
                time.sleep(1)
                os.system('clear')
                continue
            else:
                break
        switcher={
            'E':'EASY',
            'M':'MEDIUM',
            'H':'HARD',
            'N':'NIGHTMARE',
            'R':'RANDOM'
        }
        print('You\'ve chosen {}'.format(switcher.get(inp)),'MODE')
        time.sleep(1)
        os.system('clear')
        print('\n\nLoading Game...(Setting up database)\n')
        time.sleep(1)
        os.system('clear')
        print('\n\nLoading Game...(Analysing difficulty level)\n')
        time.sleep(0.9)
        os.system('clear')
        print('\n\nLoading Game...(Generating word)\n')
        time.sleep(0.8)
        input('Game ready. Press ENTER to start')
        return (data.generator(inp),switcher.get(inp))
        


    def guesser(word,mode):
       
        """ Function to input guesses and keep track of the word as well as score """
       
        word=word.strip().upper()
        l=len(word)
        wsl=[] 
        inl=[]
        hints=0
        res=''
        incorrect=0
        correct=0
        score=0
        attempts=0
        h={0:150,1:75,2:50}
        inc={0:200,1:100,2:75,3:50}
        for i in range(l):
            wsl.append('-')    
        while '-' in wsl:
            
            os.system('clear')
            print("""                
                                       ***  WELCOME TO HANGMAN  ***                  \n
                                      A Thrilling Word Guessing Game                     \n\n""")
            hs=lambda:'' if hangman.highscore==0 else hangman.highscore
            spaces=lambda x:(27,30,25,35) if x=='EASY' or x=='HARD' else((27,30,25,32) if x=='MEDIUM' or x=='RANDOM' else(22,30,25,32))
            r=spaces(mode)
            
            print('DIFFICULTY MODE: {}'.format(mode),'ATTEMPTS: {}'.format(attempts).rjust(r[0],' '),'HINTS LEFT: {}'.format(5-hints).rjust(r[1],' '),' SCORE: {}'.format(score).rjust(r[2],' '),'HIGHSCORE: {}'.format(hs()).rjust(r[3],' '))
            
            print('\n\nWORD STATUS : {}'.format(' '.join(wsl)),'HANGMAN STATUS :'.rjust(85,' '),'\n',hangman.hangstatus(incorrect))
            print('Incorrect guesses till now :',', '.join(inl))
            guess=input("""\n\n
           Enter letter      
        OR Enter * for hint  
        OR Enter # for rules 
        OR Enter & to exit game :""")
            guess=guess.strip().upper()
            if guess=='*':
                if hints==5:
                    print('MAXIMUM HINTS LIMIT REACHED')
                    time.sleep(1)
                    continue
                if hints>=2:
                    print('You\'ve used all your free hints. Availing another hint would cost you 3 points')
                    ch=input('Do you want to continue(y/n) : ')
                    if(ch=='y' or ch=='Y' or ch==''):
                        
                        score-=3
                        hints+=1
                        wsl,emer=hangman.hint(hints,word,wsl)
                        print('Penalty : -3 points')
                        if emer==-1:
                            time.sleep(0.5)
                            break
                    elif(ch=='n' or ch=='N'):
                        print(' WISE MOVE ')
                        time.sleep(1)
                        continue
                    else:
                        print('You didn\'t enter y or n.')
                        time.sleep(1)
                        continue
                else:
                    hints+=1
                    wsl,emer=hangman.hint(hints,word,wsl)
                    if emer==-1:
                        time.sleep(0.5)
                        break
            elif guess=='#':
                hangman.rules()
                continue
            elif guess=='&':
                print('ARE YOU SURE YOU WANT TO EXIT THE GAME ?') 
                re=input('\nEnter y to confirm exit or n to continue playing :')
                if(re=='y' or re=='Y' or re==''):
                    print('\n\nTHANK YOU FOR PLAYING !!!')
                    exit(0)
                elif(re=='n' or re=='N'):
                    continue
                else:
                    print('I didn\'t get that')
                    print('Please try again')
                    time.sleep(1)
                    continue
            elif len(guess)==1:
                if guess.isalpha():
                    attempts+=1
                    if guess in word:
                        k=0
                        print('\n')
                        occur=word.count(guess)
                        if wsl.count(guess)==occur :
                            print('Please look at the word status. {} has already been guessed. '.format(guess))
                            input('Press ENTER to continue ')
                            continue
                        elif wsl.count(guess)!=0:
                            
                            k=(occur-wsl.count(guess))*10     
                            score+=k   
                        else:
                            k=occur*10
                            score+=k
                        correct+=1
                        if occur==1:
                            print('CORRECT GUESS !!! THIS LETTER OCCURS ONCE IN THE WORD.')                            
                            print('YOU GET +10 POINTS')
                            index=word.find(guess)
                            wsl[index]=guess
                        else:
                            print('CORRECT GUESS !!! THIS LETTER OCCURS {} TIMES IN THE WORD.'.format(occur))                            
                            print('YOU GET +{} POINTS'.format(k))   
                            temp=0
                            start=-1
                            index=[]
                            while temp!=occur:
                                index.append(word.find(guess,start+1))
                                start=index[-1]
                                temp+=1
                            for j in index:
                                wsl[j]=word[j]
                    else:
                        incorrect+=1
                        
                        if incorrect==6:
                            print('INCORRECT GUESS :( :(\n\n')
                            time.sleep(0.6)
                            print("""
                            OOPS !!! YOU REACHED THE MAXIMUM NUMBER OF INCORRECT GUESSES 
                                     THE HANGMAN GALLOWS IS COMPLETE \n\n""",'HANGMAN STATUS :'.rjust(28,' '),'\n',hangman.hangstatus(incorrect),'\n\n  GAME OVER ')
                            
                            res='FAILURE'
                            input('Press ENTER to continue')
                            break    
                        else:
                            print('INCORRECT GUESS :( :( \n Element added to the Hangman')
                            inl.append(guess)
                            time.sleep(0.4)     
                else:
                    print('WRONG INPUT')
            else:
                print('WRONG INPUT')
            input('Press ENTER to continue ')    
        score+=h.get(hints,0)+inc.get(incorrect,0)
        if incorrect!=6:
            res='SUCCESS'
            print("""
            CONGRATULATIONS !!! YOU SUCCESSFULLY COMPLETED THE WORD. YOU GET +100 points  
            WORD :""", word)
            score+=100
            input('Press ENTER to continue')
        os.system('clear')
        print("""                
                                       ***  WELCOME TO HANGMAN  ***                  \n
                                      A Thrilling Word Guessing Game                     \n\n""")
        print("""
        Difficulty            : {}
        Word                  : {}
        Result                : {}

        Total attempts        : {}
        Correct attempts      : {}
        Incorrect attempts    : {}
        Hints used            : {}

        Hint Bonus            : {}
        Incorrect Guess Bonus : {}
        """.format(mode,word,res,attempts,correct,incorrect,hints,h.get(hints,0),inc.get(incorrect,0)))
        input('Press ENTER to get final score')
        print('\nFinal Score :',score)
        if score>hangman.highscore:
            time.sleep(0.6)
            print('NEW HIGHSCORE !!!')
            hangman.highscore=score
        print('Highscore :',hangman.highscore,'\n')

    
    
    
    
    
    def hint(hints,word,wsl):

        """ Function to generate a hint """

        print('You\'ve opted for a hint ')
        l=[]
        count=0 
        a=0
        for i in range(len(word)):              # Finding indices of unguessed letters of word
            if wsl[i]=='-' :
                l.append(i)
                count+=1
        a=choice(l)
        wsl[a]=word[a]
        temp=''
        for i in range(len(word)):
            if i==a:
                temp+=word[a]+' '
            else :
                temp+='- '
        print('\nHINT :',temp)
        if count==1:                              # Checking if hint letter was the last letter of the word 
            a=-1
        return wsl,a    


    def hangstatus(incorrect):

        """ Function to return status of hangman """

        gallows={
            0:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +                                             
                                                                                            +    
                                                                                            +       
                                                                                            +       
                                                                                            +        
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            1:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +       O                                      
                                                                                            +       
                                                                                            +       
                                                                                            +       
                                                                                            +        
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            2:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +       O                                      
                                                                                            +       |
                                                                                            +       
                                                                                            +       
                                                                                            +       
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            3:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +       O                                      
                                                                                            +       |---
                                                                                            +       
                                                                                            +       
                                                                                            +        
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            4:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +       O                                      
                                                                                            +    ---|---
                                                                                            +       
                                                                                            +      
                                                                                            +       
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            5:"""
                                                                                            +
                                                                                            +
                                                                                            + * * * * * * * * * 
                                                                                            +       |
                                                                                            +       |
                                                                                            +       O                                      
                                                                                            +    ---|---
                                                                                            +       +
                                                                                            +        +
                                                                                            +         +
                                                                                            +    
                                                                                            +
                                                                                            + + + + + + + + + + + + + +  
            """,
            6:"""
                +
                +
                + * * * * * * * * * 
                +       |
                +       |
                +       O                                      
                +    ---|---
                +       +
                +      + +
                +     +   +
                +    
                +
                + + + + + + + + + + + + + +  
            """
        }
        return gallows.get(incorrect)


    def controller(self):                                     # Master function 
                                                              # Controls all other functions 
        hangman.rules()
        word,mode=hangman.input1()
        hangman.guesser(word,mode)


obj=hangman()                                               # Creating object of class hangman 
obj.controller()                                            # Invoking master function to play the game
while True:
                                            
    inp=input('Want to play again ?(y/n)')
    if inp=='y' or inp=='Y' or inp=='':
        obj.controller()
    elif inp=='n' or inp=='N':
        inp1=input("""
        WHY QUIT ? PLAY AGAIN AND BEAT YOUR OWN HIGH SCORE !!!

        Enter y to confirm exit or n if you've changed your mind """)
        if inp1=='n' or inp1=='N' :
            obj.controller()
        elif inp1=='y' or inp1=='Y' or inp1=='':
            print('\nTHANK YOU FOR PLAYING !!!\n')
            exit(0)
        else:
            print('\nI didn\'t get that')
            print('Please try again\n')
            continue
    else:
        print('\nI didn\'t get that')
        print('Please try again\n')
        continue
